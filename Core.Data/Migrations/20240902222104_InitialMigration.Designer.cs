// <auto-generated />
using System;
using Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Core.Data.Migrations
{
    [DbContext(typeof(TPI_DbContext))]
    [Migration("20240902222104_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.Categoria", b =>
                {
                    b.Property<int>("categoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("categoriaID"));

                    b.Property<string>("nombreCategoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("categoriaID");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Core.Entities.Factura", b =>
                {
                    b.Property<int>("facturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("facturaId"));

                    b.Property<int>("dni")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaEmision")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("metodoPago")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("montoOferta")
                        .HasColumnType("int");

                    b.Property<int>("tipoFactura")
                        .HasColumnType("int");

                    b.HasKey("facturaId");

                    b.HasIndex("dni");

                    b.HasIndex("montoOferta");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("Core.Entities.ListaProducto", b =>
                {
                    b.Property<int>("idListaProductos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idListaProductos"));

                    b.Property<int>("categoriaID")
                        .HasColumnType("int");

                    b.Property<string>("nombreProducto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("idListaProductos");

                    b.HasIndex("categoriaID");

                    b.ToTable("ListaProductos");
                });

            modelBuilder.Entity("Core.Entities.Oferta", b =>
                {
                    b.Property<int>("OfertaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OfertaID"));

                    b.Property<int>("estadoOferta")
                        .HasColumnType("int");

                    b.Property<int>("montoOferta")
                        .HasColumnType("int");

                    b.Property<int>("productoID")
                        .HasColumnType("int");

                    b.Property<int>("usuarioID")
                        .HasColumnType("int");

                    b.HasKey("OfertaID");

                    b.HasIndex("productoID");

                    b.HasIndex("usuarioID");

                    b.ToTable("Ofertas");
                });

            modelBuilder.Entity("Core.Entities.Producto", b =>
                {
                    b.Property<int>("ProductoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProductoID"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("estadoProducto")
                        .HasColumnType("int");

                    b.Property<int>("habilitacionProducto")
                        .HasColumnType("int");

                    b.Property<int>("idListaProductos")
                        .HasColumnType("int");

                    b.Property<string>("nombreProducto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ofertas")
                        .HasColumnType("int");

                    b.Property<double>("precioBase")
                        .HasColumnType("double");

                    b.HasKey("ProductoID");

                    b.HasIndex("idListaProductos");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Core.Entities.Subasta", b =>
                {
                    b.Property<int>("subastaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("subastaID"));

                    b.Property<int>("cantidadProduct")
                        .HasColumnType("int");

                    b.Property<bool>("estadoSubasta")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("fechaFinalizado")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("productoID")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("usuarioCreadorID")
                        .HasColumnType("int");

                    b.HasKey("subastaID");

                    b.HasIndex("productoID");

                    b.HasIndex("usuarioCreadorID");

                    b.ToTable("Subastas");
                });

            modelBuilder.Entity("Core.Entities.Usuario", b =>
                {
                    b.Property<int>("usuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("usuarioID"));

                    b.Property<string>("apellidoUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("dni")
                        .HasColumnType("int");

                    b.Property<string>("domicilio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("ganancia")
                        .HasColumnType("float");

                    b.Property<string>("nombreUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("roles")
                        .HasColumnType("int");

                    b.HasKey("usuarioID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Core.Entities.Factura", b =>
                {
                    b.HasOne("Core.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("dni")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Oferta", "Oferta")
                        .WithMany()
                        .HasForeignKey("montoOferta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Oferta");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Core.Entities.ListaProducto", b =>
                {
                    b.HasOne("Core.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("categoriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Core.Entities.Oferta", b =>
                {
                    b.HasOne("Core.Entities.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("productoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("usuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Core.Entities.Producto", b =>
                {
                    b.HasOne("Core.Entities.ListaProducto", "ListaProducto")
                        .WithMany("Productos")
                        .HasForeignKey("idListaProductos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ListaProducto");
                });

            modelBuilder.Entity("Core.Entities.Subasta", b =>
                {
                    b.HasOne("Core.Entities.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("productoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("usuarioCreadorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Core.Entities.ListaProducto", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
