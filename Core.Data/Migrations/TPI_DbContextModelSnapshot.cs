// <auto-generated />
using System;
using Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Core.Data.Migrations
{
    [DbContext(typeof(TPI_DbContext))]
    partial class TPI_DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.Categoria", b =>
                {
                    b.Property<int>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CategoriaID"));

                    b.Property<string>("nombreCategoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CategoriaID");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Core.Entities.Historial", b =>
                {
                    b.Property<int>("HistorialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("HistorialID"));

                    b.HasKey("HistorialID");

                    b.ToTable("Historial");
                });

            modelBuilder.Entity("Core.Entities.ListaProductos", b =>
                {
                    b.Property<int>("IdListaProductos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdListaProductos"));

                    b.Property<int>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdListaProductos");

                    b.HasIndex("CategoriaID");

                    b.ToTable("ListaProductos");
                });

            modelBuilder.Entity("Core.Entities.Oferta", b =>
                {
                    b.Property<int>("OfertaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OfertaID"));

                    b.Property<int>("MontoOferta")
                        .HasColumnType("int");

                    b.Property<int>("ProductoID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("OfertaID");

                    b.HasIndex("ProductoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Ofertas");
                });

            modelBuilder.Entity("Core.Entities.Producto", b =>
                {
                    b.Property<int>("ProductoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProductoID"));

                    b.Property<int>("IdListaProductos")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("estadoProducto")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("nombreProducto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ofertas")
                        .HasColumnType("int");

                    b.Property<double>("precioBase")
                        .HasColumnType("double");

                    b.HasKey("ProductoID");

                    b.HasIndex("IdListaProductos");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Core.Entities.Subasta", b =>
                {
                    b.Property<int>("SubastaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SubastaID"));

                    b.Property<int?>("HistorialID")
                        .HasColumnType("int");

                    b.Property<int?>("HistorialID1")
                        .HasColumnType("int");

                    b.Property<int?>("HistorialID2")
                        .HasColumnType("int");

                    b.Property<int>("ProductoID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioCreadorID")
                        .HasColumnType("int");

                    b.Property<int>("cantidadProduct")
                        .HasColumnType("int");

                    b.Property<bool>("estadoSubasta")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("fechaFinalizado")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("SubastaID");

                    b.HasIndex("HistorialID");

                    b.HasIndex("HistorialID1");

                    b.HasIndex("HistorialID2");

                    b.HasIndex("ProductoID");

                    b.HasIndex("UsuarioCreadorID");

                    b.ToTable("Subastas");
                });

            modelBuilder.Entity("Core.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<string>("apellidoUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("dni")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("ganancia")
                        .HasColumnType("float");

                    b.Property<string>("nombreUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UsuarioID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Core.Entities.ListaProductos", b =>
                {
                    b.HasOne("Core.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Core.Entities.Oferta", b =>
                {
                    b.HasOne("Core.Entities.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Usuario", "Usuario")
                        .WithMany("Ofertas")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Core.Entities.Producto", b =>
                {
                    b.HasOne("Core.Entities.ListaProductos", "ListaProductos")
                        .WithMany("Productos")
                        .HasForeignKey("IdListaProductos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ListaProductos");
                });

            modelBuilder.Entity("Core.Entities.Subasta", b =>
                {
                    b.HasOne("Core.Entities.Historial", null)
                        .WithMany("Subastas_General")
                        .HasForeignKey("HistorialID");

                    b.HasOne("Core.Entities.Historial", null)
                        .WithMany("Subastas_Ofertadas")
                        .HasForeignKey("HistorialID1");

                    b.HasOne("Core.Entities.Historial", null)
                        .WithMany("Subastas_Rematando")
                        .HasForeignKey("HistorialID2");

                    b.HasOne("Core.Entities.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Usuario", "UsuarioCreador")
                        .WithMany("SubastasCreadas")
                        .HasForeignKey("UsuarioCreadorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("UsuarioCreador");
                });

            modelBuilder.Entity("Core.Entities.Historial", b =>
                {
                    b.Navigation("Subastas_General");

                    b.Navigation("Subastas_Ofertadas");

                    b.Navigation("Subastas_Rematando");
                });

            modelBuilder.Entity("Core.Entities.ListaProductos", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Core.Entities.Usuario", b =>
                {
                    b.Navigation("Ofertas");

                    b.Navigation("SubastasCreadas");
                });
#pragma warning restore 612, 618
        }
    }
}
